version: '3'

services:
    web:
        build: 
          context: ./web
          dockerfile: Dockerfile.dev
        ports:
          - "80:80"
          - "443:443"
        volumes:
          - ./app/matching_app/public:/etc/nginx/public
          - ./gunicorn_socket:/tmp/gunicorn_socket
        depends_on:
          - app
        container_name: matching_web
        environment: 
          TZ: 'Asia/Tokyo'
        restart: always
        networks:
          - matching_network

    app:
        build: 
          context: ./app
        volumes:
          - ./app:/var/www/
          - ./gunicorn_socket:/tmp/gunicorn_socket
        depends_on:
          - db
        container_name: matching_app
        environment: 
          FLASK_ENV: 'development'
          FLASK_APP: '/var/www/matching_app'
          MYSQL_DATABASE: matching_mysql
          MYSQL_USER: docker
          MYSQL_PASSWORD: docker
          TZ: 'Asia/Tokyo'
        # ports:
        #    - 9876:9876
        networks:
          - matching_network

    db:
        build: ./db
        volumes:
          - matching_mysql-db:/var/lib/mysql
        environment:
          MYSQL_ROOT_PASSWORD: root
          MYSQL_DATABASE: matching_mysql
          MYSQL_USER: docker
          MYSQL_PASSWORD: docker
          TZ: 'Asia/Tokyo'
        container_name: matching_db
        restart: always
        ports:
          - 3306:3306
        networks:
          - matching_network

volumes:
    matching_mysql-db:
        driver: local

networks:
    matching_network:
      driver: bridge